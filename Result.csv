,title,content
0,Алгоритм RSA,"С момента изобретения криптографии с открытым ключом были придуманы различные системы создания ключевой пары. Одной из первых является RSA, созданная тремя гениальными криптографами и датируемая 1977 годом. История RSA весьма интересна тем, что впервые эту схему изобрел английский математик Клиффорд Кокс, который, однако, был вынужден держать ее в секрете по требованию британской разведки, на которую он работал.Напомню, что RSA —  это не синоним криптографии с открытым ключом, а лишь одна из возможных реализаций. RSA по-прежнему, спустя более чем 40 лет после публикации, является одним из самых распространенных алгоритмов. В частности, он является стандартным алгоритмом, используемым для генерации пар ключей SSH, а учитывая, что сегодня у каждого разработчика есть свой открытый ключ добавленный на GitHub, BitBucket и другие подобные системы, можно с уверенностью сказать, что RSA достаточно широко распространен.В этой статье я не буду рассказывать о внутреннем устройстве алгоритма RSA. Если вас интересуют подробности этого алгоритма, его математическая основа, вы можете найти множество источников как в Интернете, так и в учебниках. Теория, лежащая в основе RSA далека от того, чтобы называться тривиальной, тем не менее она определенно стоит того, чтобы потратить на нее время, если вы хотите серьезно заниматься математической частью криптографии.В этой статье я рассмотрю два способа создания пар ключей RSA и форматы их хранения. Прикладная криптография, как и многие другие темы в компьютерных науках постоянно развивается и инструменты часто меняются. Узнать как сделать то или иное действие обычно не составляет труда (в этом помогает StackOverflow), но вот с что может вызвать затруднение — это получить четкое представление о том, что происходит за сценой.Во всех примерах, приведенных в этой заметке, используется 2048-битный RSA-ключ, созданный специально для этой цели, поэтому все симовлы, которые вы видите, взяты из реального примера. После написания статьи этот ключ был уничтожен."
1,Формат PEM,"Предлагаю начать разговор о парах ключей с формата их хранения. В настоящее время наиболее распространенным форматом хранения является PEM (Privacy-enhanced Electronic Mail). Как следует из названия, этот формат изначально создавался для шифрования электронной почты, но впоследствии стал общим форматом хранения криптографических данных, таких как ключи и сертификаты. Он описан вRFC 7468(""Textual Encodings of PKIX, PKCS, and CMS Structures"").Пример закрытого ключа в формате PEM выглядит следующим образом"
2,OpenSSL и ASN.1,OpenSSL может напрямую декодировать ключ в формате PEM и показать лежащую в его основе структуру ASN.1 с помощью модуляasn1parse
3,OpenSSL и ключи RSA,"Другим способом просмотра закрытого ключа в OpenSSL является использование модуляrsa. В то время как модульasn1parseявляется общим синтаксическим анализатором ASN.1, модульrsaраспознаёт структуру ключа RSA и может правильно выводить имена полей"
4,PKCS #8 vs PKCS #1,"Первая версия стандарта PKCS (PKCS #1) была специально приспособлена для ключа RSA. Его определение в формате ASN.1 можно найти вRFC 8017(""PKCS #1: RSA Cryptography Specifications Version 2.2"")."
5,Закрытый и открытый ключи,"В алгоритме RSA открытый ключ вычисляется по модулю и открытой экспоненте, то есть мы всегда можем вывести открытый ключ из закрытого. В OpenSSL это легко сделать с помощью модуляrsa, создающего открытый ключ в формате PEM"
6,Генерация ключевых пар с помощью OpenSSL,Сгенерировать закрытый ключ RSA можно с помощью OpenSSL
7,Генерация пар ключей с помощью OpenSSH,"Другим инструментом, с помощью которого можно сгенерировать пару ключей, является ssh-keygen — инструмент, входящий в состав пакета SSH и предназначенный для создания и управления ключами SSH. Поскольку ключи SSH являются стандартными асимметричными ключами, мы можем использовать этот инструмент для создания ключей для других целей.Для создания пары ключей достаточно выполнить команду"
8,Формат открытого ключа OpenSSH,"Открытый ключ, сохраняемый ssh-keygen, записывается в так называемом SSH-формате, который не является стандартом в мире криптографии. Его структура —ALGORITHM KEY COMMENT, где частьKEYформата закодирована в Base64.Например"
9,Преобразование между форматом PEM и OpenSSH,"Нам часто приходится конвертировать файлы, созданные с помощью одного инструмента, в другой формат, поэтому здесь приведен список наиболее часто встречающихся преобразований, которые могут вам понадобиться. Я предпочитаю рассматривать формат ключа, а не инструмент, но при этом даю краткое описание когда может пригодится то или иное преобразование.PEM/PKCS#1 в PEM/PKCS#8. Это полезно для преобразования закрытых ключей OpenSSH в более новый формат"
10,Чтение ключей RSA в Python,"В Python вы можете использовать пакетpycryptoдля доступа к PEM-файлу, содержащему RSA-ключ, с помощью функцииRSA.importKey. Теперь надеюсь,документация, будет чуть более понятной."
11,Заключение,"Я постоянно встречаю на StackOverflow (и на других форумах) сообщения пользователей, которые путаются в ключах RSA, в выводах различных инструментов и в тонких, но важных различиях между форматами, поэтому я надеюсь, что эта заметка помогла вам лучше разобраться в этом вопросе."
12,Ресурсы,
